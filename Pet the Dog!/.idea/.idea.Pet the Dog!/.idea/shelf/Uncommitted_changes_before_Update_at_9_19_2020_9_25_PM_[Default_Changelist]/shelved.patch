Index: Assets/Scripts/PlayerHealth.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\n\r\npublic class PlayerHealth : MonoBehaviour\r\n{\r\n    public int arms = 1; // This acts as the player's health bar.\r\n    private int last_count = 1;\r\n\r\n    void Start()\r\n    {\r\n        \r\n    }\r\n\r\n    // Update is called once per frame\r\n    void Update()\r\n    {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/PlayerHealth.cs	(revision 20d5dc3a35b62e913cc75c284abcf35f1672358a)
+++ Assets/Scripts/PlayerHealth.cs	(date 1600538912438)
@@ -15,6 +15,6 @@
     // Update is called once per frame
     void Update()
     {
-
+        
     }
 }
Index: Assets/Scripts/DUMMYmovement.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using UnityEngine;\r\nusing System.Collections;\r\n\r\npublic class DUMMYmovement : MonoBehaviour\r\n{\r\n\r\n    public float movementSpeed = 5f; //movement speed of player\r\n    public Vector2 movement; //movement axis\r\n    public Rigidbody2D rigidbody; // player rigidbody component\r\n    public float runSpeed = 10f;\r\n\r\n    void Start()\r\n    {\r\n        rigidbody = this.GetComponent<Rigidbody2D>();\r\n    }\r\n\r\n    void Update()\r\n    {\r\n        movement.x = Input.GetAxisRaw(\"Horizontal\");\r\n        movement.y = Input.GetAxisRaw(\"Vertical\");\r\n\r\n        bool moveVert = false;\r\n        bool moveHori = false;\r\n        float storeX = 0;\r\n        float storeY = 0;\r\n        void Update()\r\n        {\r\n\r\n            if (Input.GetKey(KeyCode.D))\r\n            {\r\n                moveVert = true;\r\n                moveHori = false;\r\n                storeX = Input.GetAxisRaw(\"Horizontal\");\r\n                movement.y = 0;\r\n            }\r\n\r\n            if (Input.GetKey(KeyCode.A))\r\n            {\r\n                moveVert = true;\r\n                moveHori = false;\r\n                storeX = Input.GetAxisRaw(\"Horizontal\");\r\n                movement.y = 0;\r\n            }\r\n\r\n            if (moveVert)\r\n            {\r\n                movement.x = storeX;\r\n            }\r\n\r\n            if (Input.GetKey(KeyCode.W))\r\n            {\r\n                moveVert = false;\r\n                moveHori = true;\r\n                storeY = Input.GetAxisRaw(\"Vertical\");\r\n                movement.x = 0;\r\n\r\n            }\r\n\r\n            if (Input.GetKey(KeyCode.S))\r\n            {\r\n                moveVert = false;\r\n                moveHori = true;\r\n                storeY = Input.GetAxisRaw(\"Vertical\");\r\n                movement.x = 0;\r\n            }\r\n\r\n            if (moveHori)\r\n            {\r\n                movement.y = storeY;\r\n            }\r\n\r\n            if (Input.GetKey(KeyCode.LeftShift))\r\n            {\r\n                movementSpeed = runSpeed;\r\n            }\r\n\r\n            else if (Input.GetKeyUp(KeyCode.LeftShift))\r\n            {\r\n                movementSpeed = 5f;\r\n            }\r\n\r\n            if (Input.GetKey(KeyCode.A))\r\n            {\r\n                this.GetComponent<SpriteRenderer>().flipX = true;\r\n            }\r\n\r\n            if (Input.GetKey(KeyCode.D))\r\n            {\r\n                this.GetComponent<SpriteRenderer>().flipX = false;\r\n            }\r\n        }\r\n\r\n        void FixedUpdate()\r\n        {\r\n            rigidbody.MovePosition(rigidbody.position + movement * movementSpeed * Time.fixedDeltaTime);\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/DUMMYmovement.cs	(revision 20d5dc3a35b62e913cc75c284abcf35f1672358a)
+++ Assets/Scripts/DUMMYmovement.cs	(date 1600567404993)
@@ -1,99 +1,135 @@
 using UnityEngine;
 using System.Collections;
+using System.Collections.Generic;
+using System.Linq;
+using UnityEditor;
 
 public class DUMMYmovement : MonoBehaviour
 {
 
     public float movementSpeed = 5f; //movement speed of player
     public Vector2 movement; //movement axis
+    public Vector2 lastPos;
     public Rigidbody2D rigidbody; // player rigidbody component
     public float runSpeed = 10f;
-
+    public List<Transform> tail;
+    public int arms;
+    public GameObject armPrefab;
     void Start()
     {
         rigidbody = this.GetComponent<Rigidbody2D>();
+        arms = GetComponent<PlayerHealth>().arms;
+        tail = new List<Transform>(arms);
+        for (int i = 0; i < arms; i++)
+        {
+            GameObject arm = (GameObject)Instantiate(armPrefab, rigidbody.position, Quaternion.identity);
+            tail.Insert(0,arm.transform);
+        }
     }
-
-    void Update()
-    {
-        movement.x = Input.GetAxisRaw("Horizontal");
-        movement.y = Input.GetAxisRaw("Vertical");
 
-        bool moveVert = false;
-        bool moveHori = false;
-        float storeX = 0;
-        float storeY = 0;
-        void Update()
+    bool moveVert = false;
+    bool moveHori = false;
+    float storeX = 0;
+    float storeY = 0;
+    void Update()
+    {
+        if (GetComponent<PlayerHealth>().arms != arms)
         {
-
-            if (Input.GetKey(KeyCode.D))
-            {
-                moveVert = true;
-                moveHori = false;
-                storeX = Input.GetAxisRaw("Horizontal");
-                movement.y = 0;
-            }
-
-            if (Input.GetKey(KeyCode.A))
-            {
-                moveVert = true;
-                moveHori = false;
-                storeX = Input.GetAxisRaw("Horizontal");
-                movement.y = 0;
-            }
-
-            if (moveVert)
-            {
-                movement.x = storeX;
-            }
-
-            if (Input.GetKey(KeyCode.W))
-            {
-                moveVert = false;
-                moveHori = true;
-                storeY = Input.GetAxisRaw("Vertical");
-                movement.x = 0;
-
-            }
-
-            if (Input.GetKey(KeyCode.S))
-            {
-                moveVert = false;
-                moveHori = true;
-                storeY = Input.GetAxisRaw("Vertical");
-                movement.x = 0;
-            }
+            if (GetComponent<PlayerHealth>().arms < 0)
+            {
+                EditorApplication.isPaused = true;
+            }
+            else if (GetComponent<PlayerHealth>().arms > arms)
+            {
+                GameObject arm = (GameObject)Instantiate(armPrefab, rigidbody.position-movement, Quaternion.identity);
+                //lastPos = lastPos - movement;
+                tail.Insert(0,arm.transform);
+                arms++;
+            }
+            else if (GetComponent<PlayerHealth>().arms<arms)
+            {
+                tail.RemoveAt(tail.Count-1);
+                arms--;
+            }
+        }
+
+        if (arms > 0)
+        {
+            tail.Last().position = rigidbody.position-movement;
+            tail.Insert(0,tail.Last());
+            tail.RemoveAt(tail.Count-1);
+        }
+        
+        if (Input.GetKey(KeyCode.D))
+        {
+            moveVert = true;
+            moveHori = false;
+            storeX = Input.GetAxisRaw("Horizontal");
+            movement.y = 0;
+        }
+        
+        if (Input.GetKey(KeyCode.A))
+        {
+            moveVert = true;
+            moveHori = false;
+            storeX = Input.GetAxisRaw("Horizontal");
+            movement.y = 0;
+        }
+        
+        if (moveVert)
+        {
+            movement.x = storeX;
+            
+        }
+        
+        if (Input.GetKey(KeyCode.W))
+        {
+            moveVert = false;
+            moveHori = true;
+            storeY = Input.GetAxisRaw("Vertical");
+            movement.x = 0;
+            
+        }
+        
+        if (Input.GetKey(KeyCode.S))
+        {
+            moveVert = false;
+            moveHori = true;
+            storeY = Input.GetAxisRaw("Vertical");
+            movement.x = 0;
+        }
 
-            if (moveHori)
-            {
-                movement.y = storeY;
-            }
+        if (moveHori)
+        {
+            movement.y = storeY;
+        }
 
-            if (Input.GetKey(KeyCode.LeftShift))
-            {
-                movementSpeed = runSpeed;
-            }
+        if (Input.GetKey(KeyCode.LeftShift))
+        {
+            movementSpeed = runSpeed;
+        }
 
-            else if (Input.GetKeyUp(KeyCode.LeftShift))
-            {
-                movementSpeed = 5f;
-            }
+        else if (Input.GetKeyUp(KeyCode.LeftShift))
+        {
+            movementSpeed = 5f;
+        }
 
-            if (Input.GetKey(KeyCode.A))
-            {
-                this.GetComponent<SpriteRenderer>().flipX = true;
-            }
+        if (Input.GetKey(KeyCode.A)) {
+            GetComponent<SpriteRenderer>().flipX = true;
+        }
+
 
-            if (Input.GetKey(KeyCode.D))
-            {
-                this.GetComponent<SpriteRenderer>().flipX = false;
-            }
-        }
+        if (Input.GetKey(KeyCode.D))
+        {
+            GetComponent<SpriteRenderer>().flipX = false;
+        }
+        
+    }
 
-        void FixedUpdate()
-        {
-            rigidbody.MovePosition(rigidbody.position + movement * movementSpeed * Time.fixedDeltaTime);
-        }
+    private void FixedUpdate()
+    {
+        rigidbody.MovePosition(rigidbody.position + movement * (movementSpeed * Time.fixedDeltaTime));
     }
 }
 
+    
\ No newline at end of file
Index: Assets/Scripts/Hazard.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\n\r\npublic class Hazard : MonoBehaviour\r\n{\r\n    public GameObject myCamera;\r\n    public AudioSource damagedSFX;\r\n    private HazardManager hm;\r\n    private bool isColliding = false;\r\n\r\n    void Awake()\r\n    {\r\n        myCamera = GameObject.Find(\"Main Camera\");\r\n        hm = GameObject.Find(\"HazardMGR\").GetComponent<HazardManager>();\r\n    }\r\n\r\n    void Update()\r\n    {\r\n        isColliding = false;\r\n    }\r\n\r\n    void OnTriggerEnter2D(Collider2D other)\r\n    {\r\n        if (other.tag == \"Player\")\r\n        {\r\n            damagedSFX.Play();\r\n            other.GetComponent<PlayerHealth>().arms -= 1; // Remove an arm from the Player\r\n            myCamera.GetComponent<CameraShake>().TriggerShake();\r\n\r\n            // The following code ensures that BackBatch only runs once.\r\n            if (isColliding) return;\r\n            isColliding = true;\r\n            hm.BackBatch();\r\n\r\n            \r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/Hazard.cs	(revision 20d5dc3a35b62e913cc75c284abcf35f1672358a)
+++ Assets/Scripts/Hazard.cs	(date 1600562442989)
@@ -25,6 +25,7 @@
         if (other.tag == "Player")
         {
             damagedSFX.Play();
+            
             other.GetComponent<PlayerHealth>().arms -= 1; // Remove an arm from the Player
             myCamera.GetComponent<CameraShake>().TriggerShake();
 
@@ -34,6 +35,7 @@
             hm.BackBatch();
 
             
+            
         }
     }
 }
Index: Assets/Scripts/Dog.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\n\r\npublic class Dog : MonoBehaviour\r\n{\r\n    public AudioSource doggySFX;\r\n    private bool isColliding = false;\r\n    private HazardManager hm;\r\n\r\n    void Awake()\r\n    {\r\n        hm = GameObject.Find(\"HazardMGR\").GetComponent<HazardManager>();\r\n    }\r\n\r\n    void Update()\r\n    {\r\n        isColliding = false;\r\n    }\r\n\r\n    void OnTriggerEnter2D(Collider2D other)\r\n    {\r\n        if (other.tag == \"Player\")\r\n        {\r\n            doggySFX.Play();\r\n\r\n            // The following code ensures that NextBatch only runs once.\r\n            if (isColliding) return;\r\n            isColliding = true;\r\n            hm.NextBatch();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Assets/Scripts/Dog.cs	(revision 20d5dc3a35b62e913cc75c284abcf35f1672358a)
+++ Assets/Scripts/Dog.cs	(date 1600563709388)
@@ -1,5 +1,6 @@
 using System.Collections;
 using System.Collections.Generic;
+using TreeEditor;
 using UnityEngine;
 
 public class Dog : MonoBehaviour
@@ -23,7 +24,11 @@
         if (other.tag == "Player")
         {
             doggySFX.Play();
-
+            // if (isColliding)
+            // {
+            //     other.GetComponent<PlayerHealth>().arms += 1;
+            // }
+            other.GetComponent<PlayerHealth>().arms += 1;
             // The following code ensures that NextBatch only runs once.
             if (isColliding) return;
             isColliding = true;
Index: ../.idea/.idea.halcyon-days-2020.dir/.idea/workspace.xml
===================================================================
--- ../.idea/.idea.halcyon-days-2020.dir/.idea/workspace.xml	(revision 20d5dc3a35b62e913cc75c284abcf35f1672358a)
+++ ../.idea/.idea.halcyon-days-2020.dir/.idea/workspace.xml	(revision 20d5dc3a35b62e913cc75c284abcf35f1672358a)
@@ -1,118 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="BranchesTreeState">
-    <expand>
-      <path>
-        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
-        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
-      </path>
-      <path>
-        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
-        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
-      </path>
-      <path>
-        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
-        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
-        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
-      </path>
-    </expand>
-    <select />
-  </component>
-  <component name="ChangeListManager">
-    <list default="true" id="a1bf94bf-f881-4d2c-8263-2d823397a914" name="Default Changelist" comment="Initial Commit">
-      <change beforePath="$PROJECT_DIR$/halcyon days 2020/Library/SourceAssetDB" beforeDir="false" afterPath="$PROJECT_DIR$/halcyon days 2020/Library/SourceAssetDB" afterDir="false" />
-    </list>
-    <option name="SHOW_DIALOG" value="false" />
-    <option name="HIGHLIGHT_CONFLICTS" value="true" />
-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-    <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="Git.Settings">
-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-  </component>
-  <component name="ProjectId" id="1heibMQFQNKeoZoFRhrzQL73qVR" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
-    <ConfirmationsSetting value="2" id="Add" />
-  </component>
-  <component name="ProjectViewState">
-    <option name="hideEmptyMiddlePackages" value="true" />
-    <option name="showLibraryContents" value="true" />
-  </component>
-  <component name="PropertiesComponent">
-    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
-    <property name="WebServerToolWindowFactoryState" value="false" />
-    <property name="node.js.detected.package.eslint" value="true" />
-    <property name="node.js.detected.package.tslint" value="true" />
-    <property name="node.js.path.for.package.eslint" value="project" />
-    <property name="node.js.path.for.package.tslint" value="project" />
-    <property name="node.js.selected.package.eslint" value="(autodetect)" />
-    <property name="node.js.selected.package.tslint" value="(autodetect)" />
-    <property name="vue.rearranger.settings.migration" value="true" />
-  </component>
-  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-  <component name="TaskManager">
-    <task active="true" id="Default" summary="Default task">
-      <changelist id="a1bf94bf-f881-4d2c-8263-2d823397a914" name="Default Changelist" comment="" />
-      <created>1600378032079</created>
-      <option name="number" value="Default" />
-      <option name="presentableId" value="Default" />
-      <updated>1600378032079</updated>
-      <workItem from="1600378039902" duration="49000" />
-      <workItem from="1600399955857" duration="2905000" />
-    </task>
-    <task id="LOCAL-00001" summary="Initial Commit">
-      <created>1600402743890</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1600402743890</updated>
-    </task>
-    <task id="LOCAL-00002" summary="Initial Commit">
-      <created>1600402818671</created>
-      <option name="number" value="00002" />
-      <option name="presentableId" value="LOCAL-00002" />
-      <option name="project" value="LOCAL" />
-      <updated>1600402818671</updated>
-    </task>
-    <task id="LOCAL-00003" summary="Initial Commit">
-      <created>1600402879321</created>
-      <option name="number" value="00003" />
-      <option name="presentableId" value="LOCAL-00003" />
-      <option name="project" value="LOCAL" />
-      <updated>1600402879321</updated>
-    </task>
-    <option name="localTasksCounter" value="4" />
-    <servers />
-  </component>
-  <component name="TypeScriptGeneratedFilesManager">
-    <option name="version" value="3" />
-  </component>
-  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
-  <component name="UnityUnitTestConfiguration" currentTestLauncher="NUnit" />
-  <component name="Vcs.Log.Tabs.Properties">
-    <option name="TAB_STATES">
-      <map>
-        <entry key="MAIN">
-          <value>
-            <State />
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
-  <component name="VcsManagerConfiguration">
-    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
-    <MESSAGE value="Initial Commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="Initial Commit" />
-  </component>
-  <component name="WindowStateProjectService">
-    <state x="520" y="215" key="#com.intellij.fileTypes.FileTypeChooser" timestamp="1600402499891">
-      <screen x="0" y="0" width="1536" height="824" />
-    </state>
-    <state x="520" y="215" key="#com.intellij.fileTypes.FileTypeChooser/0.0.1536.824@0.0.1536.824" timestamp="1600402499891" />
-    <state x="362" y="146" key="Vcs.Push.Dialog.v2" timestamp="1600402951594">
-      <screen x="0" y="0" width="1536" height="824" />
-    </state>
-    <state x="362" y="146" key="Vcs.Push.Dialog.v2/0.0.1536.824@0.0.1536.824" timestamp="1600402951594" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/.idea.Pet the Dog!/.idea/indexLayout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Pet the Dog!/.idea/indexLayout.xml	(date 1600566208184)
+++ .idea/.idea.Pet the Dog!/.idea/indexLayout.xml	(date 1600566208184)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ContentModelUserStore">
+    <attachedFolders />
+    <explicitIncludes>
+      <Path>Library/PackageCache/com.unity.2d.animation@3.2.4</Path>
+      <Path>Library/PackageCache/com.unity.2d.common@2.0.2</Path>
+      <Path>Library/PackageCache/com.unity.2d.path@2.0.6</Path>
+      <Path>Library/PackageCache/com.unity.2d.pixel-perfect@2.0.4</Path>
+      <Path>Library/PackageCache/com.unity.2d.psdimporter@2.1.5</Path>
+      <Path>Library/PackageCache/com.unity.2d.spriteshape@3.0.13</Path>
+      <Path>Library/PackageCache/com.unity.collab-proxy@1.2.16</Path>
+      <Path>Library/PackageCache/com.unity.ext.nunit@1.0.0</Path>
+      <Path>Library/PackageCache/com.unity.ide.rider@1.1.4</Path>
+      <Path>Library/PackageCache/com.unity.ide.vscode@1.2.1</Path>
+      <Path>Library/PackageCache/com.unity.mathematics@1.1.0</Path>
+      <Path>Library/PackageCache/com.unity.test-framework@1.1.16</Path>
+      <Path>Library/PackageCache/com.unity.textmeshpro@2.1.1</Path>
+      <Path>Library/PackageCache/com.unity.timeline@1.2.16</Path>
+      <Path>Packages</Path>
+      <Path>ProjectSettings</Path>
+    </explicitIncludes>
+    <explicitExcludes>
+      <Path>.idea</Path>
+      <Path>Library</Path>
+      <Path>Logs</Path>
+      <Path>Temp</Path>
+      <Path>obj</Path>
+    </explicitExcludes>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.idea.Pet the Dog!/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Pet the Dog!/.idea/vcs.xml	(date 1600536585900)
+++ .idea/.idea.Pet the Dog!/.idea/vcs.xml	(date 1600536585900)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/.idea.halcyon-days-2020.dir/riderModule.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"RIDER_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$/../..\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../halcyon days 2020/Temp\" />\r\n    </content>\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../.idea/.idea.halcyon-days-2020.dir/riderModule.iml	(revision 20d5dc3a35b62e913cc75c284abcf35f1672358a)
+++ ../.idea/.idea.halcyon-days-2020.dir/riderModule.iml	(date 1600536585928)
@@ -1,9 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module type="RIDER_MODULE" version="4">
   <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$/../..">
-      <excludeFolder url="file://$MODULE_DIR$/../../halcyon days 2020/Temp" />
-    </content>
+    <content url="file://$MODULE_DIR$/../.." />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/.idea.Pet the Dog!/.idea/projectSettingsUpdater.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Pet the Dog!/.idea/projectSettingsUpdater.xml	(date 1600536585885)
+++ .idea/.idea.Pet the Dog!/.idea/projectSettingsUpdater.xml	(date 1600536585885)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RiderProjectSettingsUpdater">
+    <option name="vcsConfiguration" value="2" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.idea.Pet the Dog!/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Pet the Dog!/.idea/modules.xml	(date 1600536585870)
+++ .idea/.idea.Pet the Dog!/.idea/modules.xml	(date 1600536585870)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/.idea.Pet the Dog!/riderModule.iml" filepath="$PROJECT_DIR$/.idea/.idea.Pet the Dog!/riderModule.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git ProjectSettings/EditorBuildSettings.asset ProjectSettings/EditorBuildSettings.asset
